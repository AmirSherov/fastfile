'use client';

import React, { useEffect, useState } from 'react';
import styles from '../styles/Home.module.scss';

const WaitingRoom = ({ roomId, isConnected, onCancel, onStartTransfer }) => {
  const [copied, setCopied] = useState(false);
  const roomUrl = `${window.location.origin}/room/${roomId}`;

  useEffect(() => {
    if (copied) {
      const timer = setTimeout(() => setCopied(false), 2000);
      return () => clearTimeout(timer);
    }
  }, [copied]);

  const copyToClipboard = async () => {
    try {
      await navigator.clipboard.writeText(roomUrl);
      setCopied(true);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏:', err);
    }
  };

  return (
    <div className={styles.waitingRoom}>
      <h2>–ö–æ–º–Ω–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞!</h2>
      <p>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é:</p>
      
      <div className={styles.roomLink}>
        {roomUrl}
        <button 
          className={styles.copyButton}
          onClick={copyToClipboard}
          title="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É"
        >
          {copied ? '‚úì' : 'üìã'}
        </button>
      </div>

      <div className={styles.status}>
        <span className={`${styles.statusDot} ${isConnected ? styles.connected : ''}`}></span>
        {isConnected ? '–ü–æ–ª—É—á–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á–µ–Ω' : '–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è...'}
      </div>

      <div className={styles.buttons}>
        {isConnected && (
          <button 
            className={styles.button}
            onClick={onStartTransfer}
          >
            –ù–∞—á–∞—Ç—å –ø–µ—Ä–µ–¥–∞—á—É
          </button>
        )}
        
        <button 
          className={`${styles.button} ${styles.cancelButton}`}
          onClick={onCancel}
        >
          –û—Ç–º–µ–Ω–∏—Ç—å
        </button>
      </div>
    </div>
  );
};

export default WaitingRoom; 